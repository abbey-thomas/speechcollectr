% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rateServer.R
\name{rateServer}
\alias{rateServer}
\title{Actions for likert scale tasks}
\usage{
rateServer(
  id = "rate",
  trigger,
  wait = 1000,
  n_scales = 1,
  answer_all = FALSE,
  answers,
  instructions = "",
  pretext = "",
  scale_labs = NULL,
  posttext = "",
  direction = "horizontal"
)
}
\arguments{
\item{id}{The id of the module. Must be the same as the ID of \code{rateUI()}.}

\item{trigger}{A reactive value indicating the event that should trigger the appearance of the instructions and (optionally) the play button for the audio stimulus. May be an \code{input$...} value from outside the module wrapped in \code{reactive()}.}

\item{wait}{Integer. How long should we wait to display the scale(s) after the trigger event occurs? If this value will describe the delay between when the participant clicks "play" and when the scale appears. In milliseconds.}

\item{n_scales}{Integer. The number of scales to be displayed on the page.}

\item{answer_all}{If \code{n_scales} > 1, does the participant need to give a response on each scale or only one of them?}

\item{answers}{A list with length \code{n_scales}. The answer choices for each scale should be a character vector in this list. If \code{n_scales} > 1 and the options are different for each scale, the character vectors should be wrapped in a list.}

\item{instructions}{Instructions that will appear at the top of the page.}

\item{pretext}{Character. The text that will appear above the likert scale.}

\item{scale_labs}{Character. The individual label that will appear above each scale if \code{n_scales} > 1.}

\item{posttext}{Character. The text that will appear below the likert scale.}

\item{direction}{Either "horizontal" or "vertical". Describes the position of the scale options relative to each other.}
}
\value{
Returns a reactive vector of the answers selected from each scale when the participant clicks submit.
}
\description{
Actions for likert scale tasks
}
\examples{
if (interactive()){
  library(shiny)
  library(shinyjs)
  ui <- fluidPage(
    actionButton("btn", "Click me"),
    rateUI(id = "example"),
    textOutput("confirmation")
  )

  server <- function(input, output, session) {
    observeEvent(input$btn, {
      hideElement("btn")
    })
    rating <- rateServer(id = "example",
                         trigger = reactive(input$btn),
                         instructions = "What do you think?",
                         answers = c("Strongly disagree", "Disagree",
                                     "Neutral", "Agree", "Strongly agree"),
                         pretext = "The vowels 'aw' and 'ah' sound exactly the same.")
    observe({
      if (isTruthy(rating())) {
        output$confirmation <- renderText({
          paste0("You selected ", rating(),".")})
      }
    })
  }
  shinyApp(ui = ui, server = server)
}

# An example with 2 scales....
if (interactive()){
  library(shiny)
  library(shinyjs)
  ui <- fluidPage(
    actionButton("btn", "Click me"),
    rateUI(id = "example"),
    textOutput("confirmation")
  )

  server <- function(input, output, session) {
    observeEvent(input$btn, {
      hideElement("btn")
    })
    rating <- rateServer(id = "example",
                         trigger = reactive(input$btn),
                         instructions = "Finish the sentence:",
                         answers = list(c("Sound completely the same",
                                          "Sound similar, but not totally alike",
                                          "Sound pretty different",
                                          "Sound totally different"),
                                        c("Are produced in the exact same way",
                                          "Are produced similarly",
                                          "Are produced pretty distinctly",
                                          "Are produced in totally distinct ways")),
                         pretext = "The vowels 'aw' and 'ah'...",
                         n_scales = 2,
                         answer_all = TRUE,
                         direction = "vertical",
                         scale_labs = c("perception", "production"))
    observe({
      if (isTruthy(rating())) {
        output$confirmation <- renderText({
          paste0("You selected ", rating(),".")})
      }
    })
  }
  shinyApp(ui = ui, server = server)
}
}
