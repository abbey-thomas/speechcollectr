% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trimWav.R
\name{trimWav}
\alias{trimWav}
\title{Trim leading and trailing noise in a recording containing a single utterance}
\usage{
trimWav(
  wave,
  outfile = NULL,
  begin = NULL,
  end = NULL,
  beginPad = 50,
  endPad = 50
)
}
\arguments{
\item{wave}{Required. Either a \code{tuneR::Wave} object or a valid file path to an existing wav file.}

\item{outfile}{If not \code{NULL} (the default), a filename ending in .wav where the trimmed recording will be stored. If \code{NULL}, the function will return a tuneR::Wave object.}

\item{begin}{Integer. The first sample in the \code{wave} to be considered part of the speech signal. If \code{NULL} (the default), will use the automatically detected value output by findSpeech(wave).}

\item{end}{Integer. The last sample in the \code{wave} to be considered part of the speech signal. If \code{NULL} (the default), will use the automatically detected value output by findSpeech(wave).}

\item{beginPad}{Integer. How many milliseconds of silence (zeros) should we add to the beginning of the of the detected speech signal?}

\item{endPad}{Integer. How many milliseconds of silence (zeros) should we add to the end of the detected speech signal?}
}
\value{
A wav file (or tuneR::Wave object if outfile=NULL) trimmed from the original object denoted by argument \code{wave}.
}
\description{
Trim leading and trailing noise in a recording containing a single utterance
}
\examples{
data("samp_wav")
head(samp_wav@left)
trimmed <- trimWav(samp_wav)
head(trimmed@left)
}
